// src/ai/flows/optimize-test-coverage.ts
'use server';

/**
 * @fileOverview This file defines a Genkit flow for optimizing test coverage of C++ code.
 *
 * - optimizeTestCoverage - A function that takes code coverage reports and C++ code, and suggests improvements.
 * - OptimizeTestCoverageInput - The input type for the optimizeTestCoverage function.
 * - OptimizeTestCoverageOutput - The return type for the optimizeTestCoverage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizeTestCoverageInputSchema = z.object({
  cppCode: z
    .string()
    .describe('The C++ code to analyze for test coverage.'),
  coverageReport: z
    .string()
    .describe('The code coverage report generated by a coverage tool.'),
  yamlInstructions: z
    .string()
    .describe('YAML file containing instructions for test improvement and formatting.'),
});
export type OptimizeTestCoverageInput = z.infer<
  typeof OptimizeTestCoverageInputSchema
>;

const OptimizeTestCoverageOutputSchema = z.object({
  suggestions: z
    .string()
    .describe('Suggestions for improving test coverage and code quality.'),
  formattedTests: z
    .string()
    .describe('The improved test code with proper formatting.'),
});
export type OptimizeTestCoverageOutput = z.infer<
  typeof OptimizeTestCoverageOutputSchema
>;

export async function optimizeTestCoverage(
  input: OptimizeTestCoverageInput
): Promise<OptimizeTestCoverageOutput> {
  return optimizeTestCoverageFlow(input);
}

const prompt = ai.definePrompt({
  name: 'optimizeTestCoveragePrompt',
  input: {schema: OptimizeTestCoverageInputSchema},
  output: {schema: OptimizeTestCoverageOutputSchema},
  prompt: `You are an expert C++ developer specializing in improving code quality and test coverage.  You will analyze the provided C++ code and code coverage report, and then provide suggestions for improving test coverage and code quality, adhering to the formatting guidelines in the YAML file.

C++ Code:
{{cppCode}}

Coverage Report:
{{coverageReport}}

YAML Instructions:
{{yamlInstructions}}

Based on the above information, provide concrete suggestions for improving test coverage. Ensure that the improved test code is properly formatted.

Suggestions:
{{suggestions}}

Improved Test Code:
{{formattedTests}}`,
});

const optimizeTestCoverageFlow = ai.defineFlow(
  {
    name: 'optimizeTestCoverageFlow',
    inputSchema: OptimizeTestCoverageInputSchema,
    outputSchema: OptimizeTestCoverageOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
